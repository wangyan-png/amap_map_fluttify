// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class MACoordinateBounds extends NSObject  {
  //region constants
  static const String name__ = 'MACoordinateBounds';

  @override
  final String tag__ = 'amap_map_fluttify';

  
  //endregion

  //region creators
  static Future<MACoordinateBounds> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createMACoordinateBounds',
      {'init': init}
    );
    return AmapMapFluttifyIOSAs<MACoordinateBounds>(__result__);
  }
  
  static Future<List<MACoordinateBounds>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchMACoordinateBounds',
      {'length': length, 'init': init}
    );
    return __result_batch__
        .map((it) => AmapMapFluttifyIOSAs<MACoordinateBounds>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<CLLocationCoordinate2D> get_northEast() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MACoordinateBounds::get_northEast", {'__this__': this});
    return AmapMapFluttifyIOSAs<CLLocationCoordinate2D>(__result__);
  }
  
  Future<CLLocationCoordinate2D> get_southWest() async {
    final __result__ = await kAmapMapFluttifyChannel.invokeMethod("MACoordinateBounds::get_southWest", {'__this__': this});
    return AmapMapFluttifyIOSAs<CLLocationCoordinate2D>(__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_northEast(CLLocationCoordinate2D northEast) async {
    await kAmapMapFluttifyChannel.invokeMethod('MACoordinateBounds::set_northEast', <String, dynamic>{'__this__': this, "northEast": northEast});
  
  
  }
  
  Future<void> set_southWest(CLLocationCoordinate2D southWest) async {
    await kAmapMapFluttifyChannel.invokeMethod('MACoordinateBounds::set_southWest', <String, dynamic>{'__this__': this, "southWest": southWest});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'MACoordinateBounds{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension MACoordinateBounds_Batch on List<MACoordinateBounds> {
  //region getters
  Future<List<CLLocationCoordinate2D>> get_northEast_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MACoordinateBounds::get_northEast_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => AmapMapFluttifyIOSAs<CLLocationCoordinate2D>(__result__))?.cast<CLLocationCoordinate2D>()?.toList();
  }
  
  Future<List<CLLocationCoordinate2D>> get_southWest_batch() async {
    final resultBatch = await kAmapMapFluttifyChannel.invokeMethod("MACoordinateBounds::get_southWest_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => AmapMapFluttifyIOSAs<CLLocationCoordinate2D>(__result__))?.cast<CLLocationCoordinate2D>()?.toList();
  }
  
  //endregion

  //region setters
  Future<void> set_northEast_batch(List<CLLocationCoordinate2D> northEast) async {
    await kAmapMapFluttifyChannel.invokeMethod('MACoordinateBounds::set_northEast_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "northEast": northEast[__i__]}]);
  
  
  }
  
  Future<void> set_southWest_batch(List<CLLocationCoordinate2D> southWest) async {
    await kAmapMapFluttifyChannel.invokeMethod('MACoordinateBounds::set_southWest_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "southWest": southWest[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}